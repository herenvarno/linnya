# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = data/conf/themes/Aero-Fly/gtk-2.0
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(gtkdir)" \
	"$(DESTDIR)$(gtkicon_Buttonsdir)" \
	"$(DESTDIR)$(gtkicon_Check_Radiodir)" \
	"$(DESTDIR)$(gtkicon_Combodir)" \
	"$(DESTDIR)$(gtkicon_Images_Buttonsdir)" \
	"$(DESTDIR)$(gtkicon_Images_Tabsdir)" \
	"$(DESTDIR)$(gtkicon_ListHeadersdir)" \
	"$(DESTDIR)$(gtkicon_Menu_Menubardir)" \
	"$(DESTDIR)$(gtkicon_Rangedir)" \
	"$(DESTDIR)$(gtkicon_Scrollbarsdir)" \
	"$(DESTDIR)$(gtkicon_Shadowsdir)" \
	"$(DESTDIR)$(gtkicon_Spindir)" "$(DESTDIR)$(gtkicon_Tabsdir)" \
	"$(DESTDIR)$(gtkicon_Treedir)" \
	"$(DESTDIR)$(gtkicon_arrowsdir)" \
	"$(DESTDIR)$(gtkicon_othersdir)" \
	"$(DESTDIR)$(gtkicon_paneldir)"
DATA = $(gtk_DATA) $(gtkicon_Buttons_DATA) $(gtkicon_Check_Radio_DATA) \
	$(gtkicon_Combo_DATA) $(gtkicon_Images_Buttons_DATA) \
	$(gtkicon_Images_Tabs_DATA) $(gtkicon_ListHeaders_DATA) \
	$(gtkicon_Menu_Menubar_DATA) $(gtkicon_Range_DATA) \
	$(gtkicon_Scrollbars_DATA) $(gtkicon_Shadows_DATA) \
	$(gtkicon_Spin_DATA) $(gtkicon_Tabs_DATA) $(gtkicon_Tree_DATA) \
	$(gtkicon_arrows_DATA) $(gtkicon_others_DATA) \
	$(gtkicon_panel_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@
GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@
GSTREAMER_CFLAGS = @GSTREAMER_CFLAGS@
GSTREAMER_LIBS = @GSTREAMER_LIBS@
GTK2_CFLAGS = @GTK2_CFLAGS@
GTK2_LIBS = @GTK2_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSUB = @POSUB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = panel.rc\
		gtkrc\
		scrollbar.rc\
		arrows/* \
		Buttons/* \
		Check-Radio/* \
		Combo/* \
		Images/Buttons/* \
		Images/Tabs/* \
		ListHeaders/* \
		Menu-Menubar/* \
		others/* \
		panel/* \
		Range/* \
		Scrollbars/* \
		Shadows/* \
		Spin/*	\
		Tabs/* \
		Tree/*

gtkdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0
gtk_DATA = panel.rc\
		gtkrc\
		scrollbar.rc

gtkicon_arrowsdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/arrows
gtkicon_arrows_DATA = arrows/*
gtkicon_Buttonsdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Buttons
gtkicon_Buttons_DATA = Buttons/*
gtkicon_Check_Radiodir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Check-Radio
gtkicon_Check_Radio_DATA = Check-Radio/*
gtkicon_Combodir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Combo
gtkicon_Combo_DATA = Combo/*
gtkicon_Images_Buttonsdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Images/Buttons
gtkicon_Images_Buttons_DATA = Images/Buttons/*
gtkicon_Images_Tabsdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Images/Tabs
gtkicon_Images_Tabs_DATA = Images/Tabs/*
gtkicon_ListHeadersdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/ListHeaders
gtkicon_ListHeaders_DATA = ListHeaders/*
gtkicon_Menu_Menubardir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Menu-Menubar
gtkicon_Menu_Menubar_DATA = Menu-Menubar/*
gtkicon_othersdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/others
gtkicon_others_DATA = others/*
gtkicon_paneldir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/panel
gtkicon_panel_DATA = panel/*
gtkicon_Rangedir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Range
gtkicon_Range_DATA = Range/*
gtkicon_Scrollbarsdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Scrollbars
gtkicon_Scrollbars_DATA = Scrollbars/*
gtkicon_Shadowsdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Shadows
gtkicon_Shadows_DATA = Shadows/*
gtkicon_Spindir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Spin
gtkicon_Spin_DATA = Spin/*
gtkicon_Tabsdir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Tabs
gtkicon_Tabs_DATA = Tabs/*
gtkicon_Treedir = ${datadir}/linnya/conf/themes/Aero-Fly/gtk-2.0/Tree
gtkicon_Tree_DATA = Tree/*
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu data/conf/themes/Aero-Fly/gtk-2.0/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu data/conf/themes/Aero-Fly/gtk-2.0/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-gtkDATA: $(gtk_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkdir)"
	@list='$(gtk_DATA)'; test -n "$(gtkdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkdir)" || exit $$?; \
	done

uninstall-gtkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtk_DATA)'; test -n "$(gtkdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkdir)" && rm -f $$files
install-gtkicon_ButtonsDATA: $(gtkicon_Buttons_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Buttonsdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Buttonsdir)"
	@list='$(gtkicon_Buttons_DATA)'; test -n "$(gtkicon_Buttonsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Buttonsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Buttonsdir)" || exit $$?; \
	done

uninstall-gtkicon_ButtonsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Buttons_DATA)'; test -n "$(gtkicon_Buttonsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Buttonsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Buttonsdir)" && rm -f $$files
install-gtkicon_Check_RadioDATA: $(gtkicon_Check_Radio_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Check_Radiodir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Check_Radiodir)"
	@list='$(gtkicon_Check_Radio_DATA)'; test -n "$(gtkicon_Check_Radiodir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Check_Radiodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Check_Radiodir)" || exit $$?; \
	done

uninstall-gtkicon_Check_RadioDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Check_Radio_DATA)'; test -n "$(gtkicon_Check_Radiodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Check_Radiodir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Check_Radiodir)" && rm -f $$files
install-gtkicon_ComboDATA: $(gtkicon_Combo_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Combodir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Combodir)"
	@list='$(gtkicon_Combo_DATA)'; test -n "$(gtkicon_Combodir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Combodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Combodir)" || exit $$?; \
	done

uninstall-gtkicon_ComboDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Combo_DATA)'; test -n "$(gtkicon_Combodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Combodir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Combodir)" && rm -f $$files
install-gtkicon_Images_ButtonsDATA: $(gtkicon_Images_Buttons_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Images_Buttonsdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Images_Buttonsdir)"
	@list='$(gtkicon_Images_Buttons_DATA)'; test -n "$(gtkicon_Images_Buttonsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Images_Buttonsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Images_Buttonsdir)" || exit $$?; \
	done

uninstall-gtkicon_Images_ButtonsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Images_Buttons_DATA)'; test -n "$(gtkicon_Images_Buttonsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Images_Buttonsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Images_Buttonsdir)" && rm -f $$files
install-gtkicon_Images_TabsDATA: $(gtkicon_Images_Tabs_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Images_Tabsdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Images_Tabsdir)"
	@list='$(gtkicon_Images_Tabs_DATA)'; test -n "$(gtkicon_Images_Tabsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Images_Tabsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Images_Tabsdir)" || exit $$?; \
	done

uninstall-gtkicon_Images_TabsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Images_Tabs_DATA)'; test -n "$(gtkicon_Images_Tabsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Images_Tabsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Images_Tabsdir)" && rm -f $$files
install-gtkicon_ListHeadersDATA: $(gtkicon_ListHeaders_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_ListHeadersdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_ListHeadersdir)"
	@list='$(gtkicon_ListHeaders_DATA)'; test -n "$(gtkicon_ListHeadersdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_ListHeadersdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_ListHeadersdir)" || exit $$?; \
	done

uninstall-gtkicon_ListHeadersDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_ListHeaders_DATA)'; test -n "$(gtkicon_ListHeadersdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_ListHeadersdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_ListHeadersdir)" && rm -f $$files
install-gtkicon_Menu_MenubarDATA: $(gtkicon_Menu_Menubar_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Menu_Menubardir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Menu_Menubardir)"
	@list='$(gtkicon_Menu_Menubar_DATA)'; test -n "$(gtkicon_Menu_Menubardir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Menu_Menubardir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Menu_Menubardir)" || exit $$?; \
	done

uninstall-gtkicon_Menu_MenubarDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Menu_Menubar_DATA)'; test -n "$(gtkicon_Menu_Menubardir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Menu_Menubardir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Menu_Menubardir)" && rm -f $$files
install-gtkicon_RangeDATA: $(gtkicon_Range_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Rangedir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Rangedir)"
	@list='$(gtkicon_Range_DATA)'; test -n "$(gtkicon_Rangedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Rangedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Rangedir)" || exit $$?; \
	done

uninstall-gtkicon_RangeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Range_DATA)'; test -n "$(gtkicon_Rangedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Rangedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Rangedir)" && rm -f $$files
install-gtkicon_ScrollbarsDATA: $(gtkicon_Scrollbars_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Scrollbarsdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Scrollbarsdir)"
	@list='$(gtkicon_Scrollbars_DATA)'; test -n "$(gtkicon_Scrollbarsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Scrollbarsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Scrollbarsdir)" || exit $$?; \
	done

uninstall-gtkicon_ScrollbarsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Scrollbars_DATA)'; test -n "$(gtkicon_Scrollbarsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Scrollbarsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Scrollbarsdir)" && rm -f $$files
install-gtkicon_ShadowsDATA: $(gtkicon_Shadows_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Shadowsdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Shadowsdir)"
	@list='$(gtkicon_Shadows_DATA)'; test -n "$(gtkicon_Shadowsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Shadowsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Shadowsdir)" || exit $$?; \
	done

uninstall-gtkicon_ShadowsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Shadows_DATA)'; test -n "$(gtkicon_Shadowsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Shadowsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Shadowsdir)" && rm -f $$files
install-gtkicon_SpinDATA: $(gtkicon_Spin_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Spindir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Spindir)"
	@list='$(gtkicon_Spin_DATA)'; test -n "$(gtkicon_Spindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Spindir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Spindir)" || exit $$?; \
	done

uninstall-gtkicon_SpinDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Spin_DATA)'; test -n "$(gtkicon_Spindir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Spindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Spindir)" && rm -f $$files
install-gtkicon_TabsDATA: $(gtkicon_Tabs_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Tabsdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Tabsdir)"
	@list='$(gtkicon_Tabs_DATA)'; test -n "$(gtkicon_Tabsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Tabsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Tabsdir)" || exit $$?; \
	done

uninstall-gtkicon_TabsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Tabs_DATA)'; test -n "$(gtkicon_Tabsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Tabsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Tabsdir)" && rm -f $$files
install-gtkicon_TreeDATA: $(gtkicon_Tree_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_Treedir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_Treedir)"
	@list='$(gtkicon_Tree_DATA)'; test -n "$(gtkicon_Treedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_Treedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_Treedir)" || exit $$?; \
	done

uninstall-gtkicon_TreeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_Tree_DATA)'; test -n "$(gtkicon_Treedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_Treedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_Treedir)" && rm -f $$files
install-gtkicon_arrowsDATA: $(gtkicon_arrows_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_arrowsdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_arrowsdir)"
	@list='$(gtkicon_arrows_DATA)'; test -n "$(gtkicon_arrowsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_arrowsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_arrowsdir)" || exit $$?; \
	done

uninstall-gtkicon_arrowsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_arrows_DATA)'; test -n "$(gtkicon_arrowsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_arrowsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_arrowsdir)" && rm -f $$files
install-gtkicon_othersDATA: $(gtkicon_others_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_othersdir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_othersdir)"
	@list='$(gtkicon_others_DATA)'; test -n "$(gtkicon_othersdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_othersdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_othersdir)" || exit $$?; \
	done

uninstall-gtkicon_othersDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_others_DATA)'; test -n "$(gtkicon_othersdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_othersdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_othersdir)" && rm -f $$files
install-gtkicon_panelDATA: $(gtkicon_panel_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(gtkicon_paneldir)" || $(MKDIR_P) "$(DESTDIR)$(gtkicon_paneldir)"
	@list='$(gtkicon_panel_DATA)'; test -n "$(gtkicon_paneldir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(gtkicon_paneldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(gtkicon_paneldir)" || exit $$?; \
	done

uninstall-gtkicon_panelDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkicon_panel_DATA)'; test -n "$(gtkicon_paneldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gtkicon_paneldir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gtkicon_paneldir)" && rm -f $$files
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(gtkdir)" "$(DESTDIR)$(gtkicon_Buttonsdir)" "$(DESTDIR)$(gtkicon_Check_Radiodir)" "$(DESTDIR)$(gtkicon_Combodir)" "$(DESTDIR)$(gtkicon_Images_Buttonsdir)" "$(DESTDIR)$(gtkicon_Images_Tabsdir)" "$(DESTDIR)$(gtkicon_ListHeadersdir)" "$(DESTDIR)$(gtkicon_Menu_Menubardir)" "$(DESTDIR)$(gtkicon_Rangedir)" "$(DESTDIR)$(gtkicon_Scrollbarsdir)" "$(DESTDIR)$(gtkicon_Shadowsdir)" "$(DESTDIR)$(gtkicon_Spindir)" "$(DESTDIR)$(gtkicon_Tabsdir)" "$(DESTDIR)$(gtkicon_Treedir)" "$(DESTDIR)$(gtkicon_arrowsdir)" "$(DESTDIR)$(gtkicon_othersdir)" "$(DESTDIR)$(gtkicon_paneldir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-gtkDATA install-gtkicon_ButtonsDATA \
	install-gtkicon_Check_RadioDATA install-gtkicon_ComboDATA \
	install-gtkicon_Images_ButtonsDATA \
	install-gtkicon_Images_TabsDATA \
	install-gtkicon_ListHeadersDATA \
	install-gtkicon_Menu_MenubarDATA install-gtkicon_RangeDATA \
	install-gtkicon_ScrollbarsDATA install-gtkicon_ShadowsDATA \
	install-gtkicon_SpinDATA install-gtkicon_TabsDATA \
	install-gtkicon_TreeDATA install-gtkicon_arrowsDATA \
	install-gtkicon_othersDATA install-gtkicon_panelDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-gtkDATA uninstall-gtkicon_ButtonsDATA \
	uninstall-gtkicon_Check_RadioDATA uninstall-gtkicon_ComboDATA \
	uninstall-gtkicon_Images_ButtonsDATA \
	uninstall-gtkicon_Images_TabsDATA \
	uninstall-gtkicon_ListHeadersDATA \
	uninstall-gtkicon_Menu_MenubarDATA uninstall-gtkicon_RangeDATA \
	uninstall-gtkicon_ScrollbarsDATA uninstall-gtkicon_ShadowsDATA \
	uninstall-gtkicon_SpinDATA uninstall-gtkicon_TabsDATA \
	uninstall-gtkicon_TreeDATA uninstall-gtkicon_arrowsDATA \
	uninstall-gtkicon_othersDATA uninstall-gtkicon_panelDATA

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-gtkDATA \
	install-gtkicon_ButtonsDATA install-gtkicon_Check_RadioDATA \
	install-gtkicon_ComboDATA install-gtkicon_Images_ButtonsDATA \
	install-gtkicon_Images_TabsDATA \
	install-gtkicon_ListHeadersDATA \
	install-gtkicon_Menu_MenubarDATA install-gtkicon_RangeDATA \
	install-gtkicon_ScrollbarsDATA install-gtkicon_ShadowsDATA \
	install-gtkicon_SpinDATA install-gtkicon_TabsDATA \
	install-gtkicon_TreeDATA install-gtkicon_arrowsDATA \
	install-gtkicon_othersDATA install-gtkicon_panelDATA \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am uninstall \
	uninstall-am uninstall-gtkDATA uninstall-gtkicon_ButtonsDATA \
	uninstall-gtkicon_Check_RadioDATA uninstall-gtkicon_ComboDATA \
	uninstall-gtkicon_Images_ButtonsDATA \
	uninstall-gtkicon_Images_TabsDATA \
	uninstall-gtkicon_ListHeadersDATA \
	uninstall-gtkicon_Menu_MenubarDATA uninstall-gtkicon_RangeDATA \
	uninstall-gtkicon_ScrollbarsDATA uninstall-gtkicon_ShadowsDATA \
	uninstall-gtkicon_SpinDATA uninstall-gtkicon_TabsDATA \
	uninstall-gtkicon_TreeDATA uninstall-gtkicon_arrowsDATA \
	uninstall-gtkicon_othersDATA uninstall-gtkicon_panelDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
